variables:
  QT_VERSION: 5.14.2
  QT_VERSION_SHORT: 514
  GIT_DEPTH: 10

image: 817035293158.dkr.ecr.us-east-1.amazonaws.com/movableink/qtwebkit-builder:${QT_VERSION}

stages:
  - build
  - publish

Build:
  stage: build
  script:
    - Tools/Scripts/build-webkit --qt --release --prefix=/opt/qt${QT_VERSION_SHORT} --cmakeargs="-DCMAKE_PREFIX_PATH=/opt/qt${QT_VERSION_SHORT} -Wno-dev -DLLVM_PARALLEL_LINK_JOBS=1 -DLLVM_USE_SPLIT_DWARF=ON"
    - pushd WebKitBuild/Release
    - cpack -G DEB -D CPACK_PACKAGE_CONTACT=devops@movableink.com -D CPACK_PACKAGE_VERSION=0.4.0 -D CPACK_PACKAGE_FILE_NAME=qt-webkit-0.4.0_amd64 -D CPACK_PACKAGE_NAME=qt-webkit -D CPACK_PACKAGING_INSTALL_PREFIX=/opt/qt${QT_VERSION_SHORT}

Publish:
  stage: publish
  script:
    - gem install package_cloud
    - package_cloud push movableink/ubuntu/ubuntu/bionic WebKitBuild/Release/qt-webkit-0.4.0_amd64.deb

# s3_push:
#   stage: upload
#   cache: {}
#   script:
#     - apt-get update
#     - apt-get install -y python-pip
#     - pip install awscli
#     - yarn install --production
#     - rm -f data/* # remove geoip if it exists - the servers will have it
#     - rm -Rf tmp # get rid of any temp cruft
#     - echo $CI_COMMIT_SHA > ./REVISION
#     - touch ojos-${CI_COMMIT_SHA}.tar.gz
#     - tar --exclude=ojos-${CI_COMMIT_SHA}.tar.gz -czvf ojos-${CI_COMMIT_SHA}.tar.gz .
#     - aws s3 cp --acl private ojos-${CI_COMMIT_SHA}.tar.gz s3://movableink-apps/tarballs/ojos/ojos-${CI_COMMIT_SHA}.tar.gz
